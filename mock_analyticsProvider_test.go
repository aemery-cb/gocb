// Code generated by mockery v2.26.1. DO NOT EDIT.

package gocb

import (
	context "context"

	gocbcore "github.com/couchbase/gocbcore/v10"
	mock "github.com/stretchr/testify/mock"
)

// mockAnalyticsProvider is an autogenerated mock type for the analyticsProvider type
type mockAnalyticsProvider struct {
	mock.Mock
}

// AnalyticsQuery provides a mock function with given fields: ctx, opts
func (_m *mockAnalyticsProvider) AnalyticsQuery(ctx context.Context, opts gocbcore.AnalyticsQueryOptions) (analyticsRowReader, error) {
	ret := _m.Called(ctx, opts)

	var r0 analyticsRowReader
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, gocbcore.AnalyticsQueryOptions) (analyticsRowReader, error)); ok {
		return rf(ctx, opts)
	}
	if rf, ok := ret.Get(0).(func(context.Context, gocbcore.AnalyticsQueryOptions) analyticsRowReader); ok {
		r0 = rf(ctx, opts)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(analyticsRowReader)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, gocbcore.AnalyticsQueryOptions) error); ok {
		r1 = rf(ctx, opts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockAnalyticsProvider interface {
	mock.TestingT
	Cleanup(func())
}

// newMockAnalyticsProvider creates a new instance of mockAnalyticsProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockAnalyticsProvider(t mockConstructorTestingTnewMockAnalyticsProvider) *mockAnalyticsProvider {
	mock := &mockAnalyticsProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
