// Code generated by mockery v2.26.1. DO NOT EDIT.

package gocb

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockMgmtProvider is an autogenerated mock type for the mgmtProvider type
type mockMgmtProvider struct {
	mock.Mock
}

// executeMgmtRequest provides a mock function with given fields: ctx, req
func (_m *mockMgmtProvider) executeMgmtRequest(ctx context.Context, req mgmtRequest) (*mgmtResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *mgmtResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, mgmtRequest) (*mgmtResponse, error)); ok {
		return rf(ctx, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, mgmtRequest) *mgmtResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*mgmtResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, mgmtRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockMgmtProvider interface {
	mock.TestingT
	Cleanup(func())
}

// newMockMgmtProvider creates a new instance of mockMgmtProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockMgmtProvider(t mockConstructorTestingTnewMockMgmtProvider) *mockMgmtProvider {
	mock := &mockMgmtProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
