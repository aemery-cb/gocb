// Code generated by mockery v2.20.0. DO NOT EDIT.

package gocb

import (
	context "context"

	gocbcore "github.com/couchbase/gocbcore/v10"
	mock "github.com/stretchr/testify/mock"
)

// mockHttpProvider is an autogenerated mock type for the httpProvider type
type mockHttpProvider struct {
	mock.Mock
}

// DoHTTPRequest provides a mock function with given fields: ctx, req
func (_m *mockHttpProvider) DoHTTPRequest(ctx context.Context, req *gocbcore.HTTPRequest) (*gocbcore.HTTPResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *gocbcore.HTTPResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *gocbcore.HTTPRequest) (*gocbcore.HTTPResponse, error)); ok {
		return rf(ctx, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *gocbcore.HTTPRequest) *gocbcore.HTTPResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gocbcore.HTTPResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *gocbcore.HTTPRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockHttpProvider interface {
	mock.TestingT
	Cleanup(func())
}

// newMockHttpProvider creates a new instance of mockHttpProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockHttpProvider(t mockConstructorTestingTnewMockHttpProvider) *mockHttpProvider {
	mock := &mockHttpProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
